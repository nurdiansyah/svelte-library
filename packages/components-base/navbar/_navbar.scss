@use "sass:map";
@use "../scss/mixins/index" as mix;
@use "../scss/functions" as *;
@use "../scss/variables-default" as var;

// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: var.$navbar-padding-y var.$navbar-padding-x;
  @include mix.gradient-bg();

  > .container {
    display: flex;
    flex-wrap: inherit;
    align-items: center;
    justify-content: space-between;
  }

  // Generate series of `.-expand-*` responsive classes for configuring
  // where your navbar collapses.
  &.-expand {
    @each $breakpoint in map.keys(var.$grid-breakpoints) {
      $next: mix.breakpoint-next($breakpoint, var.$grid-breakpoints);
      $infix: mix.breakpoint-infix($next, var.$grid-breakpoints);

      // stylelint-disable
      &#{$infix} {
        @include mix.media-breakpoint-up($next) {
          flex-wrap: nowrap;
          justify-content: flex-start;

          .nav-menu {
            flex-direction: row;

            .dropdown-menu {
              position: absolute;
            }

            .nav-link {
              padding-right: var.$navbar-nav-link-padding-x;
              padding-left: var.$navbar-nav-link-padding-x;
            }
          }

          .collapse {
            display: flex !important;
          }

          .navbar-toggler {
            display: none;
          }
        }
      }
      // stylelint-enable
    }
  }

  // Navbar themes
  //
  // Styles for switching between navbars with light or dark background.

  // Dark links against a light background
  .navbar-light {
    .navbar-brand {
      color: var.$navbar-light-brand-color;

      &:hover,
      &:focus {
        color: var.$navbar-light-brand-hover-color;
      }
    }

    .navbar-nav {
      .nav-link {
        color: var.$navbar-light-color;

        &:hover,
        &:focus {
          color: var.$navbar-light-hover-color;
        }

        &.disabled {
          color: var.$navbar-light-disabled-color;
        }
      }

      &.-show > .nav-link,
      .nav-link.active {
        color: var.$navbar-light-active-color;
      }
    }

    .navbar-toggler {
      color: var.$navbar-light-color;
      border-color: var.$navbar-light-toggler-border-color;
    }

    .navbar-toggler-icon {
      background-image: escape-svg(var.$navbar-light-toggler-icon-bg);
    }

    .navbar-text {
      color: var.$navbar-light-color;

      a,
      a:hover,
      a:focus {
        color: var.$navbar-light-active-color;
      }
    }
  }

  // White links against a dark background
  .navbar-dark {
    .navbar-brand {
      color: var.$navbar-dark-brand-color;

      &:hover,
      &:focus {
        color: var.$navbar-dark-brand-hover-color;
      }
    }

    .navbar-nav {
      .nav-link {
        color: var.$navbar-dark-color;

        &:hover,
        &:focus {
          color: var.$navbar-dark-hover-color;
        }

        &.-disabled {
          color: var.$navbar-dark-disabled-color;
        }
      }

      &.-show > .nav-link,
      .nav-link.active {
        color: var.$navbar-dark-active-color;
      }
    }

    .navbar-toggler {
      color: var.$navbar-dark-color;
      border-color: var.$navbar-dark-toggler-border-color;
    }

    .navbar-toggler-icon {
      background-image: escape-svg(var.$navbar-dark-toggler-icon-bg);
    }

    .navbar-text {
      color: var.$navbar-dark-color;
      // stylelint-disable-next-line
      a,
      a:hover,
      a:focus {
        color: var.$navbar-dark-active-color;
      }
    }
  }
}
