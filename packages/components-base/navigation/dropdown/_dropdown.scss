@use "sass:map";
@use "../../scss/mixins/index" as mix;
@use "../../scss/variables-default" as var;

// The dropdown wrapper (`<div>`)
.c-dropdown {
  position: relative;

  > .toggle {
    white-space: nowrap;

    // Generate the caret automatically
    @include mix.caret();
  }

  // The dropdown menu
  > .menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: var.$zindex-dropdown;
    display: none; // none by default, but block on "open" of the menu
    min-width: var.$dropdown-min-width;
    padding: var.$dropdown-padding-y 0;
    margin: var.$dropdown-spacer 0 0; // override default ul
    @include mix.font-size(var.$dropdown-font-size);
    color: var.$dropdown-color;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    list-style: none;
    background-color: var.$dropdown-bg;
    background-clip: padding-box;
    border: var.$dropdown-border-width solid var.$dropdown-border-color;
    @include mix.border-radius(var.$dropdown-border-radius);
    @include mix.box-shadow(var.$dropdown-box-shadow);
  }

  // scss-docs-start responsive-breakpoints
  @each $breakpoint in map.keys(var.$grid-breakpoints) {
    @include mix.media-breakpoint-up($breakpoint) {
      $infix: mix.breakpoint-infix($breakpoint, var.$grid-breakpoints);

      > .menu {
        // stylelint-disable
        &.#{$infix}-left {
          right: auto;
          left: 0;
        }
        &.#{$infix}-right {
          right: 0;
          left: auto;
        }
      }
    }
  }
}
// scss-docs-end responsive-breakpoints

// Allow for dropdowns to go bottom up (aka, dropup-menu)
// Just add .dropup after the standard .dropdown class and you're set.
.dropup {
  .dropdown-menu {
    top: auto;
    bottom: 100%;
    margin-top: 0;
    margin-bottom: var.$dropdown-spacer;
  }

  .dropdown-toggle {
    @include mix.caret(up);
  }
}

.dropright {
  .dropdown-menu {
    top: 0;
    right: auto;
    left: 100%;
    margin-top: 0;
    margin-left: var.$dropdown-spacer;
  }

  .dropdown-toggle {
    @include mix.caret(right);
    &::after {
      vertical-align: 0;
    }
  }
}

.dropleft {
  .dropdown-menu {
    top: 0;
    right: 100%;
    left: auto;
    margin-top: 0;
    margin-right: var.$dropdown-spacer;
  }

  .dropdown-toggle {
    @include mix.caret(left);
    &::before {
      vertical-align: 0;
    }
  }
}

// When enabled Popper.js, reset basic dropdown position
// stylelint-disable-next-line no-duplicate-selectors
.dropdown-menu {
  &[x-placement^="top"],
  &[x-placement^="right"],
  &[x-placement^="bottom"],
  &[x-placement^="left"] {
    right: auto;
    bottom: auto;
  }
}

// Dividers (basically an `<hr>`) within the dropdown
.dropdown-divider {
  height: 0;
  margin: var.$dropdown-divider-margin-y 0;
  overflow: hidden;
  border-top: 1px solid var.$dropdown-divider-bg;
}

// Links, buttons, and more within the dropdown menu
//
// `<button>`-specific styles are denoted with `// For <button>s`
.dropdown-item {
  display: block;
  width: 100%; // For `<button>`s
  padding: var.$dropdown-item-padding-y var.$dropdown-item-padding-x;
  clear: both;
  font-weight: var.$font-weight-normal;
  color: var.$dropdown-link-color;
  text-align: inherit; // For `<button>`s
  text-decoration: if(var.$link-decoration == none, null, none);
  white-space: nowrap; // prevent links from randomly breaking onto new lines
  background-color: transparent; // For `<button>`s
  border: 0; // For `<button>`s

  // Prevent dropdown overflow if there's no padding
  // See https://github.com/twbs/bootstrap/pull/27703
  @if var.$dropdown-padding-y == 0 {
    &:first-child {
      @include mix.border-top-radius(var.$dropdown-inner-border-radius);
    }

    &:last-child {
      @include mix.border-bottom-radius(var.$dropdown-inner-border-radius);
    }
  }

  &:hover,
  &:focus {
    color: var.$dropdown-link-hover-color;
    text-decoration: if(var.$link-hover-decoration == underline, none, null);
    @include mix.gradient-bg(var.$dropdown-link-hover-bg);
  }

  &.active,
  &:active {
    color: var.$dropdown-link-active-color;
    text-decoration: none;
    @include mix.gradient-bg(var.$dropdown-link-active-bg);
  }

  &.disabled,
  &:disabled {
    color: var.$dropdown-link-disabled-color;
    pointer-events: none;
    background-color: transparent;
    // Remove CSS gradients if they're enabled
    background-image: if(var.$enable-gradients, none, null);
  }
}

.dropdown-menu.show {
  display: block;
}

// Dropdown section headers
.dropdown-header {
  display: block;
  padding: var.$dropdown-header-padding;
  margin-bottom: 0; // for use with heading elements
  @include mix.font-size(var.$font-size-sm);
  color: var.$dropdown-header-color;
  white-space: nowrap; // as with > li > a
}

// Dropdown text
.dropdown-item-text {
  display: block;
  padding: var.$dropdown-item-padding-y var.$dropdown-item-padding-x;
  color: var.$dropdown-link-color;
}
