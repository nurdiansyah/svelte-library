/* stylelint-disable rscss/class-format */

@use "../functions";
@use "./browsers";
@use "./breakpoints";

$offset: 20px;
$-transition: left 0.3s ease, right 0.3s ease, bottom 0.3s ease, top 0.3s ease;

//
// Offcanvas
//

@mixin offcanvas-base($config) {
  $width: functions.get-value($config, width);
  $height: functions.get-value($config, height);
  $z-index: functions.get-value($config, z-index, 98);
  position: fixed;
  top: 0;
  bottom: 0;
  z-index: $z-index;
  //overflow-y: auto;
  transition: $-transition;

  @if $width != null {
    left: -($width + $offset);
    width: $width;

    // Right Direction
    &.-right {
      right: -($width + $offset);
      left: auto;

      &.-on {
        right: 0;
        left: auto;
        transition: $-transition;
      }
    }
  }

  @if $height != null {
    height: $height;
  }

  &.-on {
    left: 0;
    transition: $-transition;
  }

  @include browsers.for-ie11 {
    transition: none !important;
  }

  @if $height != null {
    // Top Direction
    &.-top {
      top: -($height + $offset);
      right: 0;
      left: 0;

      &.-on {
        top: 0;
        right: 0;
        left: 0;
        transition: $-transition;
      }
    }

    // Bottom Direction
    &.-bottom {
      right: 0;
      bottom: -($height + $offset);
      left: 0;

      &.-on {
        right: 0;
        bottom: 0;
        left: 0;
        transition: $-transition;
      }
    }
  }

  // Overlay
  &.-overlay {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: $z-index - 1;
    overflow: hidden;
    animation: animation-offcanvas-fade-in 0.6s ease 1;
  }

  // Animation
  @keyframes animation-offcanvas-fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin offcanvas-width($width) {
  left: -($width + 20px);
  width: $width;

  &.-on {
    left: 0;
  }

  // Right Direction
  &.-right {
    right: -($width + 20px);
    left: auto;

    &.-on {
      right: 0;
      left: auto;
    }
  }
}

@mixin offcanvas-height($height) {
  // Top Direction
  &.-top {
    top: -($height + $offset);
    right: 0;
    left: 0;

    &.-on {
      top: 0;
      right: 0;
      left: 0;
      transition: $-transition;
    }
  }

  // Bottom Direction
  &.-bottom {
    right: 0;
    bottom: -($height + $offset);
    left: 0;

    &.-on {
      right: 0;
      bottom: 0;
      left: 0;
      transition: $-transition;
    }
  }
}

@mixin offcanvas-theme($config) {
  @if (functions.has-value($config, bg-color)) {
    background: functions.get-value($config, bg-color);
  }

  @if (functions.has-value($config, shadow)) {
    box-shadow: functions.get-value($config, shadow);
  }

  &.-overlay {
    background: functions.get-value($config, overlay-bg-color);
  }
}

@mixin offcanvas-build($mode, $config) {
  @if $mode == default {
    // Default Mode
    @include offcanvas-base($config);
    @include offcanvas-theme($config);
  }

  @if $mode == desktop {
    // Desktop Mode
    @include breakpoints.media-breakpoint-up(lg) {
      @include offcanvas-base($config);
      @include offcanvas-theme($config);
    }
  }

  @if $mode == desktop-and-tablet {
    // Desktop & Tablet Modes
    @include breakpoints.media-breakpoint-up(md) {
      @include offcanvas-base($config);
      @include offcanvas-theme($config);
    }
  }

  @if $mode == tablet {
    // Tablet Mode
    @include breakpoints.media-breakpoint-between(md, lg) {
      @include offcanvas-base($config);
      @include offcanvas-theme($config);
    }
  }

  @if $mode == tablet-and-mobile {
    // Tablet & Mobile Modes
    @include breakpoints.media-breakpoint-down(md) {
      @include offcanvas-base($config);
      @include offcanvas-theme($config);
    }
  }

  @if $mode == mobile {
    // Mobile Mode
    @include breakpoints.media-breakpoint-down(sm) {
      @include offcanvas-base($config);
      @include offcanvas-theme($config);
    }
  }

  // Responsive Width
  @if functions.has-value($config, width) {
    @media (max-width: functions.get-value($config, width) + 50px) {
      width: 90% !important;
    }
  }
}
