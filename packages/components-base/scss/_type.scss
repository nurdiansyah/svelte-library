@use "./mixins/lists";
@use "./vendor/rfs";
@use "./reboot" as *;
@use "./variables-default" as var;

//
// Headings
//
.h1 {
  @extend h1;
}

.h2 {
  @extend h2;
}

.h3 {
  @extend h3;
}

.h4 {
  @extend h4;
}

.h5 {
  @extend h5;
}

.h6 {
  @extend h6;
}

.lead {
  @include rfs.font-size(var.$lead-font-size);
  font-weight: var.$lead-font-weight;
}

// Type display classes
@each $display, $font-size in var.$display-font-sizes {
  .display-#{$display} {
    @include rfs.font-size($font-size);
    font-weight: var.$display-font-weight;
    line-height: var.$display-line-height;
  }
}

//
// Emphasis
//
.small {
  @extend small;
}

.mark {
  @extend mark;
}

//
// Lists
//

.list-unstyled {
  @include lists.list-unstyled();
}

// Inline turns list items into inline-block
.list-inline {
  @include lists.list-unstyled();
}

.list-inline-item {
  display: inline-block;

  &:not(:last-child) {
    margin-right: var.$list-inline-padding;
  }
}

//
// Misc
//

// Builds on `abbr`
.initialism {
  @include rfs.font-size(var.$initialism-font-size);
  text-transform: uppercase;
}

// Blockquotes
.blockquote {
  margin-bottom: var.$blockquote-margin-y;
  @include rfs.font-size(var.$blockquote-font-size);

  > :last-child {
    margin-bottom: 0;
  }
}

.blockquote-footer {
  margin-top: -(var.$blockquote-margin-y);
  margin-bottom: var.$blockquote-margin-y;
  @include rfs.font-size(var.$blockquote-footer-font-size);
  color: var.$blockquote-footer-color;

  &::before {
    content: "\2014\00A0"; // em dash, nbsp
  }
}
