@use "sass:color";
@use "styles/mixins/index" as mix;
@use "styles/colors";
@use "styles/variables-default" as var;

@mixin alert-variant($background, $border, $color) {
  color: $color;
  @include mix.gradient-bg($background);
  border-color: $border;

  .alert-link {
    color: color.adjust($color, $lightness: -10%);
  }
}

//
// Base styles
//

.c-alert {
  position: relative;
  padding: var.$alert-padding-y var.$alert-padding-x;
  margin-bottom: var.$alert-margin-bottom;
  border: var.$alert-border-width solid transparent;
  @include mix.border-radius(var.$alert-border-radius);

  // Headings for larger alerts
  .alert-heading {
    // Specified to prevent conflicts of changing $headings-color
    color: inherit;
  }

  // Provide class for links that match alerts
  .alert-link {
    font-weight: var.$alert-link-font-weight;
  }

  // Dismissible alerts
  //
  // Expand the right padding and account for the close button's positioning.

  &.-dismissible {
    padding-right: var.$close-font-size + var.$alert-padding-x * 2;

    // Adjust close link position
    > .close {
      position: absolute;
      top: 0;
      right: 0;
      padding: var.$alert-padding-y var.$alert-padding-x;
      color: inherit;
    }
  }

  // scss-docs-start alert-modifiers
  // Generate contextual modifier classes for colorizing the alert.

  @each $color, $value in var.$theme-colors {
    // stylelint-disable
    &.-#{$color} {
      @include alert-variant(
        colors.color-level($value, var.$alert-bg-level),
        colors.color-level($value, var.$alert-border-level),
        colors.color-level($value, var.$alert-color-level)
      );
    }
  }
  // scss-docs-end alert-modifiers
}
