@use "sass:map";
@use "../../scss/functions" as *;
@use "../../scss/colors";
@use "../../scss/theme";
@use "../../scss/mixins/index" as mix;

// .modal-open      - body class for killing the scroll
// .dbx-modal           - container to scroll within
// > .dialog    - positioning shell for the actual modal
// > .dialog > .content   - actual modal w/ bg and corners and stuff

// Padding applied to the modal body
$modal-inner-padding: get-value(theme.$spacers, 3) !default;

// Margin between elements in footer, must be lower than or equal to 2 * $modal-inner-padding
$modal-footer-margin-between: 0.5rem !default;

$modal-dialog-margin: 0.5rem !default;
$modal-dialog-margin-y-sm-up: 1.75rem !default;

$modal-title-line-height: get-value(theme.$typography, subtitle2) !default;

$modal-content-box-shadow-sm-up: nth(theme.$shadow, 5) !default;

$modal-content-color: null !default;
$modal-content-bg: colors.$white !default;
$modal-content-border-color: rgba(colors.$black, 0.2) !default;
$modal-content-border-width: 1px !default;
$modal-content-border-radius: get-value(theme.$shape, border-radius) !default;
$modal-content-inner-border-radius: subtract($modal-content-border-radius, $modal-content-border-width) !default;

$modal-backdrop-bg: colors.$black !default;
$modal-backdrop-opacity: 0.5 !default;
$modal-header-border-color: colors.$gray-300 !default;
$modal-footer-border-color: $modal-header-border-color !default;
$modal-header-border-width: $modal-content-border-width !default;
$modal-footer-border-width: $modal-header-border-width !default;
$modal-header-padding-y: $modal-inner-padding !default;
$modal-header-padding-x: $modal-inner-padding !default;
$modal-header-padding: $modal-header-padding-y $modal-header-padding-x !default; // Keep this for backwards compatibility

$modal-sm: 300px !default;
$modal-md: 500px !default;
$modal-lg: 800px !default;
$modal-xl: 1140px !default;

$modal-fade-transform: translate(0, -50px) !default;
$modal-show-transform: none !default;
$modal-transition: transform 0.3s ease-out !default;
$modal-scale-transform: scale(1.02) !default;

.modal-open {
  // Kill the scroll on the body
  overflow: hidden;

  .dbx-modal {
    overflow-x: hidden;
    overflow-y: auto;
  }
}

// Container that the modal scrolls within
.dbx-modal {
  position: fixed;
  top: 0;
  left: 0;
  z-index: get-value(theme.$z-index);
  display: none;
  width: 100%;
  height: 100%;
  overflow: hidden;
  // Prevent Chrome on Windows from adding a focus outline. For details, see
  outline: 0;
  // We deliberately don't use `-webkit-overflow-scrolling: touch;` due to a
  // gnarly iOS Safari bug: https://bugs.webkit.org/show_bug.cgi?id=158342

  // Modal background
  > .backdrop {
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
    width: 100vw;
    height: 100vh;
    background-color: $modal-backdrop-bg;
  }

  > .backdrop {
    opacity: $modal-backdrop-opacity;
  }

  .modal-dialog {
    transform: $modal-show-transform;
  }

  // When fading in the modal, animate it to slide down
  &.-fade {
    > .backdrop {
      opacity: 0;
    }

    .modal-dialog {
      transition: get-transition(theme.$transitions, transform);
      transform: $modal-fade-transform;
    }
  }

  // When trying to close, animate focus to scale
  &.-static .modal-dialog {
    transform: $modal-scale-transform;
  }

  @include mix.media-breakpoint-up(sm) {
    &.-size-sm {
      max-width: $modal-sm;
    }
  }

  @include mix.media-breakpoint-up(lg) {
    &.-size-lg,
    &.-size-xl {
      max-width: $modal-lg;
    }
  }

  @include mix.media-breakpoint-up(xl) {
    &.-size-xl {
      max-width: $modal-xl;
    }
  }
}

.modal-dialog {
  position: relative;
  width: auto;
  height: subtract(100%, $modal-dialog-margin * 2);
  margin: $modal-dialog-margin;
  // allow clicks to pass through for custom click handling to close modal
  pointer-events: none;

  &.-scrollable {
    .modal-content {
      max-height: 100%;
      overflow: hidden;
    }

    .modal-body {
      overflow-y: auto;
    }
  }

  &.-centered {
    display: flex;
    align-items: center;
    min-height: subtract(100%, $modal-dialog-margin * 2);
  }

  // Scale up the modal
  @include mix.media-breakpoint-up(sm) {
    // Automatically set modal's width for larger viewports
    max-width: $modal-md;
    margin: $modal-dialog-margin-y-sm-up auto;

    &.-scrollable {
      height: subtract(100%, $modal-dialog-margin-y-sm-up * 2);
    }

    &.-centered {
      min-height: subtract(100%, $modal-dialog-margin-y-sm-up * 2);
    }
  }
}

// Actual modal
.modal-content {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`
  // counteract the pointer-events: none; in the .modal-dialog
  color: $modal-content-color;
  pointer-events: auto;
  background-color: $modal-content-bg;
  background-clip: padding-box;
  border: $modal-content-border-width solid $modal-content-border-color;
  border-radius: $modal-content-border-radius;
  @include mix.box-shadow(15);
  // Remove focus outline from opened modal
  outline: 0;

  @each $breakpoint in map.keys(theme.$breakpoints) {
    $infix: mix.breakpoint-infix($breakpoint, theme.$breakpoints);
    $postfix: if($infix != "", $infix + "-down", "");

    @include mix.media-breakpoint-down($breakpoint) {
      // stylelint-disable rscss/class-format
      &.-fullscreen#{$postfix} {
        width: 100vw;
        max-width: none;
        height: 100%;
        margin: 0;

        .modal-content {
          height: 100%;
          border: 0;
          border-radius: 0;
        }

        .modal-header {
          border-radius: 0;
        }

        .modal-body {
          overflow-y: auto;
        }

        .modal-footer {
          border-radius: 0;
        }
      }
    }
    //  stylelint-enable
  }
}

// Modal header
// Top section of the modal w/ title and dismiss
.modal-header {
  display: flex;
  flex-shrink: 0;
  align-items: flex-start; // so the close btn always stays on the upper right corner
  justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
  padding: $modal-header-padding;
  border-bottom: $modal-header-border-width solid $modal-header-border-color;
  border-radius: $modal-content-inner-border-radius;

  > .close {
    padding: $modal-header-padding;
    // auto on the left force icon to the right even when there is no .modal-title
    margin: (-($modal-header-padding-y)) (-($modal-header-padding-x)) (-($modal-header-padding-y)) auto;
  }
}

// Title text within header
.modal-title {
  margin-bottom: 0;
  line-height: $modal-title-line-height;
}

// Modal body
// Where all modal content resides (sibling of .modal-header and .modal-footer)
.modal-body {
  position: relative;
  // Enable `flex-grow: 1` so that the body take up as much space as possible
  // when there should be a fixed height on `.modal-dialog`.
  flex: 1 1 auto;
  padding: $modal-inner-padding;
}

// Footer (for actions)
.modal-footer {
  display: flex;
  flex-shrink: 0;
  flex-wrap: wrap;
  align-items: center; // vertically center
  justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
  padding: $modal-inner-padding - $modal-footer-margin-between / 2;
  border-top: $modal-footer-border-width solid $modal-footer-border-color;
  @include mix.border-bottom-radius($modal-content-inner-border-radius);

  // Place margin between footer elements
  // This solution is far from ideal because of the universal selector usage,
  // but is needed to fix https://github.com/twbs/bootstrap/issues/24800
  > * {
    margin: $modal-footer-margin-between / 2;
  }
}

// Measure scrollbar width for padding body during modal show/hide
.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}
