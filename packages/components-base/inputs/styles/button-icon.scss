@use "styles/functions" as *;
@use "styles/theme";
@use "styles/mixins/index" as mix;

.button-base.-icon {
  flex: 0 0 auto;
  padding: 12px;
  overflow: visible;
  font-size: pxToRem(24);
  text-align: center;
  border-radius: 50%;
  transition: get-transition(theme.$transitions, background-color, shortest);

  > .label {
    display: flex;
    align-items: inherit;
    justify-content: inherit;
    width: 100%;
  }

  > .edge-start {
    margin-left: -12px;
  }

  > .edge-end {
    margin-right: -12px;
  }

  &.-disabled {
    background-color: transparent;
  }

  &.-size-small {
    padding: 3px;
    font-size: pxToRem(18);

    > .edge-start {
      margin-left: 3px;
    }

    > .edge-end {
      margin-right: -3px;
    }
  }

  @include mix.build-theme() using($theme, $key) {
    $action: get-value($theme, action);
    $action-active: get-value($action, active);
    $action-hover-opacity: get-value($action, hover-opacity);
    $action-disabled: get-value($action, disabled);

    color: $action-active;
    &:hover {
      background-color: fade-in($action-active, $action-hover-opacity);
      @media (hover: none) {
        background-color: transparent;
      }
    }

    &.-disabled {
      color: $action-disabled;
    }
  }

  &.-color-inherit {
    color: inherit;
  }

  @include mix.build-colors() using($color) {
    $_color-main: get-value($color, main);

    color: $_color-main;
    &:hover {
      background-color: fade-in($_color-main, 0.04);
      @media (hover: none) {
        background-color: transparent;
      }
    }
  }
}
